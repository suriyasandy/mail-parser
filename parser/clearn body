from bs4 import BeautifulSoup
import re

def clean_signatures_keep_mail_chain(html: str) -> str:
    soup = BeautifulSoup(html, "html.parser")

    # Remove <style>, <script>, <head>, etc.
    for tag in soup(["style", "script", "head", "meta", "title", "link", "xml"]):
        tag.decompose()

    # ✅ Remove ALL signature blocks based on _MailAutoSig in:
    # <a name>, class, style
    for tag in soup.find_all():
        name_attr = tag.get("name", "")
        class_attr = " ".join(tag.get("class", [])) if tag.has_attr("class") else ""
        style_attr = tag.get("style", "")

        if (
            "_MailAutoSig" in name_attr
            or "_MailAutoSig" in class_attr
            or "mso-bookmark:_MailAutoSig" in style_attr
        ):
            container = tag.find_parent(["div", "p", "span", "td"]) or tag
            container.decompose()

    # ✅ Remove MS Word styling (optional)
    for tag in soup.find_all(attrs={"class": re.compile(r"^Mso")}):
        tag.attrs.pop("class", None)

    for tag in soup.find_all():
        if "mso-" in tag.get("style", ""):
            tag.attrs.pop("style", None)

    # ✅ Remove From:/To:/Sent: headers inside content
    header_regex = re.compile(r"^\s*(From|To|Cc|Bcc|Sent|Subject|Date):", re.IGNORECASE)
    for tag in soup.find_all(["p", "div", "span", "td"]):
        if header_regex.match(tag.get_text(strip=True)):
            tag.decompose()

    # ✅ Remove empty tags
    for tag in soup.find_all():
        if not tag.get_text(strip=True):
            tag.decompose()

    return str(soup)
