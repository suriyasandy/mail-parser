# extraction/msg_parser_util.py

from msg_parser import MsOxMessage

def parse_msg_file(msg_file):
    """
    Parse a .msg file and return:
      - chain: list of {text_body, html_body} in thread order
      - attachments: list of attachments
    """
    msg = MsOxMessage(msg_file)

    # 1. Extract raw bodies
    body = getattr(msg, "body", "") or getattr(msg, "plain_body", "") or ""
    html  = getattr(msg, "htmlBody", "") or getattr(msg, "html_body", "") or getattr(msg, "html", "") or ""

    # 2. Split into a simple “thread” by common delimiters
    text_parts = body.split("\nFrom:")
    html_parts = html.split("<br>From:") if html else [""] * len(text_parts)

    chain = []
    for i, txt in enumerate(text_parts):
        chain.append({
            "text_body": txt.strip(),
            "html_body": (html_parts[i] if i < len(html_parts) else "").strip()
        })

    # 3. Decode bytes if needed (safety)
    for msg_obj in chain:
        for k in ("text_body", "html_body"):
            v = msg_obj[k]
            if isinstance(v, (bytes, bytearray)):
                msg_obj[k] = v.decode("utf-8", errors="ignore")

    return {
        "chain": chain,
        "attachments": msg.attachments or []
    }
